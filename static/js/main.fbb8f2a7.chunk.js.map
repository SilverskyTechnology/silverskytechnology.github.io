{"version":3,"sources":["components/header/Header.js","components/githubRepoCard/GithubRepoCard.js","components/topButton/TopButton.js","portfolio.js","pages/projects/Projects.js","pages/projects/ProjectManager.js","components/footer/Footer.js","pages/errors/error404/Error.js","containers/Main.js","theme.js","global.js","App.js","serviceWorker.js","index.js"],"names":["Header","Component","render","theme","this","props","React","createElement","Fade","top","duration","distance","className","style","backgroundColor","body","GithubRepoCard","_ref","_repo$project_tags","repo","isValidUrl","url","trim","renderLinkItem","iconClass","bgColor","ariaLabel","href","target","rel","aria-label","fontSize","fontWeight","onClick","async","toast","error","textarea","document","value","position","opacity","appendChild","navigator","clipboard","writeText","select","execCommand","success","err","console","parentNode","removeChild","handleCopy","concat","whiteBG","bottom","key","id","project_logo","src","alt","aria-hidden","height","role","viewBox","width","fillRule","d","color","text","project_name","project_tags","map","tag","idx","appstore_url","playstore_url","web_url","TopButton","window","onscroll","scrollTop","documentElement","getElementById","visibility","border","title","onMouseEnter","topButton","arrow","onMouseLeave","greeting","projectsHeader","Projects","constructor","super","showToast","message","setState","toastMessage","toastTimeout","clearTimeout","setTimeout","state","projects","loading","componentWillUnmount","projectList","response","axios","get","process","headers","status","firebaseConfig","apiKey","data","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","getApps","length","initializeApp","db","getFirestore","querySnapshot","getDocs","collection","sortedData","docs","doc","sort","a","b","sequence","log","warn","fetchWithApiKey","Array","from","_","i","ShimmerThumbnail","rounded","index","Footer","secondaryText","Error","Link","to","display","Main","BrowserRouter","basename","Switch","Route","path","exact","Object","assign","Error404","chosenTheme","expTxtColor","highlight","dark","imageHighlight","compImgHighlight","jacketColor","headerColor","splashBg","GlobalStyles","createGlobalStyle","_templateObject","_taggedTemplateLiteral","_ref2","App","ThemeProvider","Fragment","Toaster","Boolean","location","hostname","match","engine","Styletron","ReactDOM","StyletronProvider","BaseProvider","LightTheme","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbb8f2a7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport { Fade } from \"react-reveal\";\n\nclass Header extends Component {\n  render() {\n    const theme = this.props.theme;\n    return (\n      <Fade top duration={1000} distance=\"20px\">\n        {/* <SeoHeader /> */}\n        <div>\n          <header className=\"header\">\n            {/* <NavLink to=\"/\" tag={Link} className=\"logo\">\n              <span className=\"logo-name\" style={{ color: theme.text }}>\n                <img\n                  src={greeting.logo_name}\n                  alt=\"App Logo\"\n                  className=\"web-logo\"\n                />\n              </span>\n\n              <image />\n            </NavLink> */}\n\n            <ul className=\"menu\" style={{ backgroundColor: theme.body }}></ul>\n          </header>\n        </div>\n      </Fade>\n    );\n  }\n}\nexport default Header;\n","import React from \"react\";\nimport \"./GithubRepoCard.css\";\nimport { Fade } from \"react-reveal\";\nimport toast from \"react-hot-toast\";\n\nexport default function GithubRepoCard({ repo, theme }) {\n  const isValidUrl = (url) => url && url.trim() !== \"\";\n\n  const handleCopy = async (url) => {\n    // Early return if no URL\n    if (!url) {\n      toast.error(\"No link to copy!\");\n      return;\n    }\n    const textarea = document.createElement(\"textarea\");\n    try {\n      // Create a hidden textarea as a fallback\n\n      textarea.value = url;\n      textarea.style.position = \"fixed\";\n      textarea.style.opacity = \"0\";\n      document.body.appendChild(textarea);\n\n      // Try modern API first\n      if (navigator.clipboard) {\n        await navigator.clipboard.writeText(url);\n      }\n      // Fallback for older browsers\n      else {\n        textarea.select();\n        document.execCommand(\"copy\");\n      }\n\n      toast.success(\"Link copied!\");\n    } catch (err) {\n      console.error(\"Copy failed:\", err);\n      toast.error(\"Failed to copy link\");\n    } finally {\n      // Clean up\n      if (textarea && textarea.parentNode) {\n        textarea.parentNode.removeChild(textarea);\n      }\n    }\n  };\n\n  // Reusable function for rendering store/web copy links\n  const renderLinkItem = (url, iconClass, bgColor, ariaLabel) => {\n    if (!isValidUrl(url)) return null;\n    return (\n      <li style={{ \"--bg\": bgColor }}>\n        <a\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={ariaLabel}\n        >\n          <i className={iconClass + \" store-icon\"}></i>\n        </a>\n        <button\n          className=\"copy-btn-mobile\"\n          style={{ fontSize: 10, fontWeight: \"bold\" }}\n          onClick={() => handleCopy(url)}\n          aria-label={`Copy ${ariaLabel}`}\n        >\n          <i\n            className=\"fa-solid fa-link link-icon\"\n            style={{ fontSize: 10 }}\n          ></i>\n          Copy link\n        </button>\n      </li>\n    );\n  };\n\n  return (\n    <div className=\"repo-card-div\" style={{ backgroundColor: theme.whiteBG }}>\n      <Fade bottom duration={2000} distance=\"40px\">\n        <div key={repo?.id}>\n          <div className=\"repo-name-div\">\n            {isValidUrl(repo?.project_logo) ? (\n              <img\n                src={repo?.project_logo || \"\"}\n                alt=\"App Logo\"\n                className=\"app-logo\"\n              />\n            ) : (\n              <svg\n                aria-hidden=\"true\"\n                className=\"octicon repo-svg\"\n                height=\"16\"\n                role=\"img\"\n                viewBox=\"0 0 12 16\"\n                width=\"12\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 \n                  .55-.45 1-1 1H6v2l-1.5-1.5L3 \n                  16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 \n                  1-1h10c.55 0 1 .45 1 1zm-1 \n                  10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z\"\n                ></path>\n              </svg>\n            )}\n            <p className=\"repo-name\" style={{ color: theme.text }}>\n              {repo?.project_name || \"\"}\n            </p>\n          </div>\n\n          <div className=\"repo-chip\">\n            {repo?.project_tags?.map((tag, idx) => (\n              <span className=\"chip\" key={idx}>\n                {tag}\n              </span>\n            ))}\n          </div>\n\n          <div className=\"repo-stats\">\n            <ul className=\"social\">\n              {renderLinkItem(\n                repo?.appstore_url,\n                \"fa-brands fa-apple\",\n                \"#1D9BF0\",\n                \"App Store link\"\n              )}\n              {renderLinkItem(\n                repo?.playstore_url,\n                \"fa-brands fa-google-play\",\n                \"#3DDC84\",\n                \"Play Store link\"\n              )}\n              {renderLinkItem(\n                repo?.web_url,\n                \"fa-solid fa-globe\",\n                \"#4285F4\",\n                \"Web link\"\n              )}\n            </ul>\n          </div>\n        </div>\n      </Fade>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./TopButton.css\";\n\nexport default function TopButton({ theme }) {\n  function GoUpEvent() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n  function scrollFunction() {\n    if (\n      document.body.scrollTop > 30 ||\n      document.documentElement.scrollTop > 30\n    ) {\n      document.getElementById(\"topButton\").style.visibility = \"visible\";\n    } else {\n      document.getElementById(\"topButton\").style.visibility = \"hidden\";\n    }\n  }\n\n  window.onscroll = function () {\n    scrollFunction();\n  };\n\n  const onMouseEnter = (color, bgColor) => {\n    /* For the button */\n    const topButton = document.getElementById(\"topButton\");\n    topButton.style.color = color;\n    topButton.style.backgroundColor = bgColor;\n\n    /* For arrow icon */\n    const arrow = document.getElementById(\"arrow\");\n    arrow.style.color = color;\n    arrow.style.backgroundColor = bgColor;\n  };\n\n  const onMouseLeave = (color, bgColor) => {\n    /* For the button */\n    const topButton = document.getElementById(\"topButton\");\n    topButton.style.color = color;\n    topButton.style.backgroundColor = bgColor;\n\n    /* For arrow icon */\n    const arrow = document.getElementById(\"arrow\");\n    arrow.style.color = color;\n    arrow.style.backgroundColor = bgColor;\n  };\n\n  return (\n    <div\n      onClick={GoUpEvent}\n      id=\"topButton\"\n      style={{\n        color: theme.body,\n        backgroundColor: theme.text,\n        border: `solid 1px ${theme.text}`,\n      }}\n      title=\"Go up\"\n      onMouseEnter={() => onMouseEnter(theme.text, theme.body)}\n      onMouseLeave={() => onMouseLeave(theme.body, theme.text)}\n    >\n      <i className=\"fas fa-arrow-up\" id=\"arrow\" aria-hidden=\"true\" />\n    </div>\n  );\n}\n","/* Change this file to get your personal Porfolio */\n\n// Website related settings\nconst settings = {\n  isSplash: true, // Change this to false if you don't want Splash screen.\n};\n\n//SEO Related settings\nconst seo = {\n  title: \"Silversky Technology's Portfolio\",\n  description:\n    \"A passionate individual who always thrives to work on end to end products which develop sustainable and scalable social and technical systems to create impact.\",\n  og: {\n    title: \"Silversky Technology Portfolio\",\n    type: \"website\",\n    url: \"https://silverskytechnology.com/\",\n  },\n};\n\n//Home Page\nconst greeting = {\n  title: \"Silversky Technology\",\n  logo_name:\n    \"https://revamp.silverskytechnology.com/wp-content/uploads/2025/05/logo-main-1-1.png\",\n  nickname: \"sst\",\n  subTitle:\n    \"A passionate individual who always thrives to work on end to end products which develop sustainable and scalable social and technical systems to create impact.\",\n  resumeLink: \"https://silverskytechnology.com/\",\n};\n\n// // Projects Page\nconst projectsHeader = {\n  title: \"Portfolio\",\n  description:\n    \"My projects makes use of vast variety of latest technology tools. My best experience is to create Data Science projects and deploy them to web applications using cloud infrastructure.\",\n  avatar_image_path: \"projects_image.svg\",\n};\n\nexport {\n  settings,\n  seo,\n  greeting,\n  // certifications,\n  // experience,\n  projectsHeader,\n  // publicationsHeader,\n  // publications,\n  // contactPageData,\n};\n","import React, { Component } from \"react\";\nimport Header from \"../../components/header/Header\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport TopButton from \"../../components/topButton/TopButton\";\nimport { Fade } from \"react-reveal\";\nimport { projectsHeader } from \"../../portfolio.js\";\nimport \"./Projects.css\";\nimport { fetchWithApiKey } from \"./ProjectManager.js\";\nimport { ShimmerThumbnail } from \"react-shimmer-effects\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      loading: true, // 👈 loading flag\n      showToast: false,\n      toastMessage: \"\",\n    };\n    this.toastTimeout = null;\n  }\n\n  componentWillUnmount() {\n    if (this.toastTimeout) {\n      clearTimeout(this.toastTimeout);\n    }\n  }\n\n  showToast = (message) => {\n    this.setState({ showToast: true, toastMessage: message });\n\n    if (this.toastTimeout) {\n      clearTimeout(this.toastTimeout);\n    }\n\n    this.toastTimeout = setTimeout(() => {\n      this.setState({ showToast: false });\n    }, 1500);\n  };\n\n  async componentDidMount() {\n    try {\n      const projectList = await fetchWithApiKey();\n      this.setState({ projects: projectList, loading: false });\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const theme = this.props.theme;\n    const { projects, loading, showToast, toastMessage } = this.state;\n\n    return (\n      <div className=\"projects-main\">\n        <Header theme={theme} />\n        <div className=\"basic-projects\">\n          <Fade bottom duration={2000} distance=\"40px\">\n            <div className=\"projects-heading-div\">\n              <div className=\"projects-heading-text-div\">\n                <h1\n                  className=\"projects-heading-text\"\n                  style={{ color: theme.text }}\n                >\n                  {projectsHeader.title}\n                </h1>\n              </div>\n            </div>\n          </Fade>\n        </div>\n\n        {loading ? (\n          <div className=\"shimmer-grid\">\n            {Array.from({ length: 8 }).map((_, i) => (\n              <ShimmerThumbnail rounded className=\"shimmer\" />\n            ))}\n          </div>\n        ) : (\n          <div className=\"repo-cards-div-main\">\n            {projects.map((repo, index) => (\n              <GithubRepoCard\n                key={`repo-${index}`}\n                repo={repo}\n                theme={theme}\n                showToast={this.showToast}\n              />\n            ))}\n          </div>\n        )}\n\n        {showToast && <div className=\"projects-toast\">{toastMessage}</div>}\n        <TopButton theme={this.props.theme} />\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import { collection, getDocs } from \"firebase/firestore\";\nimport axios from \"axios\";\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport const fetchWithApiKey = async () => {\n  try {\n    const response = await axios.get(process.env.REACT_APP_BASEURL, {\n      headers: {\n        \"x-api-key\": process.env.REACt_APP_X_API_TOKEN,\n      },\n    });\n\n    // console.log(response);\n\n    if (response.status === 200) {\n      const firebaseConfig = {\n        apiKey: response.data.apiKey,\n        authDomain: response.data.authDomain,\n        projectId: response.data.projectId,\n        storageBucket: response.data.storageBucket,\n        messagingSenderId: response.data.messagingSenderId,\n        appId: response.data.appId,\n        measurementId: response.data.measurementId,\n      };\n\n      // Initialize Firebase only if not already initialized\n      const app =\n        getApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\n      const db = getFirestore(app);\n\n      const querySnapshot = await getDocs(collection(db, \"Projects\"));\n      const data = querySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      const sortedData = data.sort((a, b) => a.sequence - b.sequence);\n\n      console.log(\"Fetched and sorted Firestore data:\", sortedData);\n      return sortedData;\n    } else {\n      console.warn(\"Non-200 response received:\", response.status);\n      return [];\n    }\n  } catch (error) {\n    console.error(\"API call or Firestore fetch failed:\", error);\n    return [];\n  }\n};\n","import React from \"react\";\nimport \"./Footer.css\";\nimport { Fade } from \"react-reveal\";\nimport { greeting } from \"../../portfolio.js\";\n/* eslint-disable jsx-a11y/accessible-emoji */\n\nexport default function Footer(props) {\n  return (\n    <div className=\"footer-div\">\n      <Fade>\n        <p className=\"footer-text\" style={{ color: props.theme.secondaryText }}>\n          Made with <span role=\"img\">❤️</span> by {greeting.title}\n        </p>\n        {/* <ToggleSwitch theme={props.theme} onToggle={props.onToggle}/> */}\n      </Fade>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Header from \"../../../components/header/Header\";\nimport Footer from \"../../../components/footer/Footer\";\nimport TopButton from \"../../../components/topButton/TopButton\";\nimport { Fade } from \"react-reveal\";\nimport \"./Error.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Error extends Component {\n  render() {\n    const theme = this.props.theme;\n    return (\n      <div className=\"error-main\">\n        <Header theme={this.props.theme} />\n        <div className=\"error-class\">\n          <Fade bottom duration={2000} distance=\"40px\">\n            <h1>Woops</h1>\n            <h1 className=\"error-404\">404</h1>\n            <p>The requested page is unavailable at the moment!</p>\n            <Link\n              className=\"main-button\"\n              to=\"/home\"\n              style={{\n                color: theme.body,\n                backgroundColor: theme.text,\n                border: `solid 1px ${theme.text}`,\n                display: \"inline-flex\",\n              }}\n            >\n              Go Home\n            </Link>\n          </Fade>\n        </div>\n        <Footer theme={this.props.theme} />\n        <TopButton theme={this.props.theme} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\n// import Home from \"../pages/home/HomeComponent\";\n// import Splash from \"../pages/splash/Splash\";\n// import Education from \"../pages/education/EducationComponent\";\n// import Experience from \"../pages/experience/Experience\";\n// import Opensource from \"../pages/opensource/Opensource\";\n// import Contact from \"../pages/contact/ContactComponent\";\nimport Projects from \"../pages/projects/Projects\";\n// import { settings } from \"../portfolio.js\";\nimport Error404 from \"../pages/errors/error404/Error\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/\">\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            // render={(props) =>\n            //   settings.isSplash ? (\n            //     <Splash {...props} theme={this.props.theme} />\n            //   ) : (\n            //     <Home {...props} theme={this.props.theme} />\n            //   )\n            // }\n            render={(props) => <Projects {...props} theme={this.props.theme} />}\n          />\n          {/* <Route\n            path=\"/home\"\n            render={(props) => <Home {...props} theme={this.props.theme} />}\n          />\n          <Route\n            path=\"/experience\"\n            exact\n            render={(props) => (\n              <Experience {...props} theme={this.props.theme} />\n            )}\n          /> */}\n          {/* <Route\n            path=\"/education\"\n            render={(props) => (\n              <Education {...props} theme={this.props.theme} />\n            )}\n          /> */}\n          {/* <Route\n            path=\"/opensource\"\n            render={(props) => (\n              <Opensource {...props} theme={this.props.theme} />\n            )}\n          />\n          <Route\n            path=\"/contact\"\n            render={(props) => <Contact {...props} theme={this.props.theme} />}\n          /> */}\n\n          {/* {settings.isSplash && (\n            <Route\n              path=\"/splash\"\n              render={(props) => <Splash {...props} theme={this.props.theme} />}\n            />\n          )} */}\n\n          {/* <Route\n            path=\"/projects\"\n            render={(props) => <Projects {...props} theme={this.props.theme} />}\n          /> */}\n          <Route\n            path=\"*\"\n            render={(props) => <Error404 {...props} theme={this.props.theme} />}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","// theme.js\nexport const blueTheme = {\n  body: \"#EDF9FE\",\n  text: \"#001C55\",\n  expTxtColor: \"#000a12\",\n  highlight: \"#A6E1FA\",\n  dark: \"#00072D\",\n  secondaryText: \"#7F8DAA\",\n  imageHighlight: \"#0E6BA8\",\n  compImgHighlight: \"#E6E6E6\",\n  jacketColor: \"#0A2472\",\n  headerColor: \"#0E6BA877\",\n  splashBg: \"#001C55\",\n  whiteBG: \"#FFFFFF\",\n};\n\nexport const chosenTheme = blueTheme;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    align-items: center;\n    background: ${({ theme }) => theme.whiteBG};\n    color: ${({ theme }) => theme.text};\n    display: flex;\n    // flex-direction: column;\n    // justify-content: center;\n    // height: 100vh;\n    // margin: 0;\n    // padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n    transition: all 0.25s linear;\n  }`;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./containers/Main\";\nimport { ThemeProvider } from \"styled-components\";\nimport { chosenTheme } from \"./theme\";\nimport { GlobalStyles } from \"./global\";\nimport { Toaster } from \"react-hot-toast\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={chosenTheme}>\n      <>\n        <GlobalStyles />\n        <div>\n          <Toaster />\n          <Main theme={chosenTheme} />\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BaseProvider, LightTheme } from \"baseui\";\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\n\nimport \"./index.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/font-awesome/css/all.css\";\n\nconst engine = new Styletron();\n\nReactDOM.render(\n  <StyletronProvider value={engine}>\n    <BaseProvider theme={LightTheme}>\n      <App />\n    </BaseProvider>\n  </StyletronProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}